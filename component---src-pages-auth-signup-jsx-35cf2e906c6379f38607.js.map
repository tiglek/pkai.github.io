{"version":3,"sources":["webpack:///./src/views/page-auth-signup.jsx","webpack:///./src/pages/auth/signup.jsx","webpack:///./src/constants/providers.ts","webpack:///./src/views/comp-sign-up/comp-sign-up-form.jsx","webpack:///./src/views/comp-sign-up/comp-sign-up-provider-buttons.jsx","webpack:///./src/components/SignUp/SignUpForm.tsx","webpack:///./src/components/SignUp/index.ts"],"names":["withTranslation","t","Layout","SEO","title","SignUp","providers","id","provider","enabled","getLinkUrl","providerName","API_BASE_URL","CompSignUpForm","onSubmit","username","onChangeUsername","email","onChangeEmail","password","onChangePassword","passwordConfirmation","onChangePasswordConfirmation","isSubmitButtonDisabled","errorMessage","name","value","onChange","type","placeholder","disabled","CompSignUpProviderButtons","map","item","key","href","className","social","style","width","INITIAL_STATE","error","SignUpForm","state","event","signup","then","res","kind","setState","navigate","ROUTES","catch","message","toString","preventDefault","target","isValidFormData","this","render","props","Component","SignUpProviderButtons","filter"],"mappings":"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","file":"component---src-pages-auth-signup-jsx-35cf2e906c6379f38607.js","sourcesContent":["\nimport React from 'react';\nimport { withTranslation } from \"react-i18next\"\n\nimport { Layout } from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\n\nimport { SignUpForm } from '../components/SignUp';\n\nconst I18N_ID = 'Others';\n\n/**\n * Sign-up\n * \n * @param {function} t i18n function\n */\nconst PageAuthSignup = ({\n  t\n}) => (\n  <Layout>\n    {/* page title */}\n    <SEO title={t(\"auth.signup\")} />\n\n    <h1>{t(\"auth.signup\")}</h1>\n\n    <SignUpForm t={t} />\n  \n  </Layout>\n);\n\nexport default withTranslation(I18N_ID)(PageAuthSignup);\n","import React from 'react';\n\nimport AuthSignupView from '../../views/page-auth-signup';\n\nexport default () => (\n  <>\n    <AuthSignupView />\n  </>\n);\n","import {API_BASE_URL} from '../config';\n\nconst providers = [\n//  'discord', \n//  'facebook', \n//  'github', \n{id: 'email', provider: 'email', enabled: true},\n{id: 'google.com', provider: 'google', enabled: true}\n//  'microsoft', \n//  'twitch', \n//  'twitter'\n];\n\nexport function getLinkUrl(providerName: string): string {\n  return `${API_BASE_URL}/connect/${providerName}`;\n}\n\nexport function isAvailable(providerId: string): boolean {\n  for (let i = 0; i < providers.length; i ++) {\n    if (providerId === providers[i].id) return providers[i].enabled;\n  }\n  return false;\n}\n\nexport default providers;\n","import React from 'react';\n\nimport './styles.scss';\n\n/**\n * Sign-in form view\n * \n * @param {function} t i18n function\n */\nconst CompSignUpForm = ({\n  t,\n  onSubmit,\n  username,\n  onChangeUsername,\n  email,\n  onChangeEmail,\n  password,\n  onChangePassword,\n  passwordConfirmation,\n  onChangePasswordConfirmation,\n  isSubmitButtonDisabled,\n  errorMessage\n}) => (\n  <form onSubmit={onSubmit}>\n    <input\n      name=\"username\"\n      value={username}\n      onChange={onChangeUsername}\n      type=\"text\"\n      placeholder=\"Full Name\"\n    /> <br/>\n    <input\n      name=\"email\"\n      value={email}\n      onChange={onChangeEmail}\n      type=\"text\"\n      placeholder=\"Email Address\"\n    /> <br/>\n    <input\n      name=\"password\"\n      value={password}\n      onChange={onChangePassword}\n      type=\"password\"\n      placeholder=\"Password\"\n    /> <br/>\n    <input\n      name=\"passwordConfirmation\"\n      value={passwordConfirmation}\n      onChange={onChangePasswordConfirmation}\n      type=\"password\"\n      placeholder=\"Confirm Password\"\n    /> <br/>\n    <button disabled={isSubmitButtonDisabled} type=\"submit\">\n      {t('auth.form-sign-up-button')}\n    </button> <br/>\n\n    {errorMessage && <p>{errorMessage}</p>}\n  </form>\n);\n\nexport default CompSignUpForm;\n","import React from 'react';\n\nimport './styles.scss';\n\n/**\n * Sign-in provider buttons view\n * \n * @param {object} providers\n * @param {function} getLinkUrl\n */\nconst CompSignUpProviderButtons = ({\n  providers,\n  getLinkUrl,\n}) => (\n  <div>\n    {providers.map((item) => (\n      <div key={item.id}>\n        <a href={getLinkUrl(item.id)} className=\"link\">\n          <button type=\"button\" social={item.provider} style={{ width: '80%' }}>\n            <i className={`fa fa-${item.provider}`} />\n          </button>\n        </a>\n      </div>\n    ))\n    }\n  </div>\n);\n\nexport default CompSignUpProviderButtons;\n","import React, { Component } from 'react';\nimport { navigate } from 'gatsby';\n\nimport { signup } from '../../services/auth';\nimport * as ROUTES from '../../constants/routes';\nimport providers, {getLinkUrl} from '../../constants/providers';\n\nimport { ComponentProps } from '../ComponentProps.d';\n\nimport CompSignUpForm from '../../views/comp-sign-up/comp-sign-up-form';\nimport CompSignUpProviderButtonsView from '../../views/comp-sign-up/comp-sign-up-provider-buttons';\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n  error: '',\n};\n\ninterface SignUpFormProps extends ComponentProps {\n}\n\ntype SignUpFormStates = typeof INITIAL_STATE;\n\nclass SignUpForm extends Component<SignUpFormProps, SignUpFormStates> {\n\n  state = INITIAL_STATE;\n\n  onSubmit = (event: React.FormEvent) => {\n    const { username, email, password } = this.state;\n\n    signup({username, email, password})\n      .then((res) => {\n        if (!res || res.kind !== 'ok') {\n          this.setState({...INITIAL_STATE, error: res ? res.kind : 'unknown-error'});\n        }\n        else {\n          this.setState({ ...INITIAL_STATE });\n          navigate(ROUTES.USER_HOME);\n        }\n      })\n      .catch(error => {\n        this.setState({ error: error.message || error.toString() });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // !!! The variable, 'name' shold be 'username', 'email' or 'password'\n    //@ts-ignore\n    const { name, value } = event.target;\n    //@ts-ignore\n    this.setState({ [name]: value });\n  };\n\n  isValidFormData(): boolean {\n    const { username, email, password, passwordConfirmation } = this.state;\n    // simple check\n    return !!(username && password && email && (password === passwordConfirmation));\n  }\n\n  render() {\n    const isSubmitButtonDisabled = !this.isValidFormData();\n    const { username, email, password, passwordConfirmation, error } = this.state;\n\n    // TODO: fix type error\n    // @ts-ignore\n    return ( <CompSignUpForm\n      onSubmit={this.onSubmit}\n      username={username}\n      onChangeUsername={this.onChange}\n      email={email}\n      onChangeEmail={this.onChange}\n      password={password}\n      onChangePassword={this.onChange}\n      passwordConfirmation={passwordConfirmation}\n      onChangePasswordConfirmation={this.onChange}\n      isSubmitButtonDisabled={isSubmitButtonDisabled}\n      errorMessage={error}\n      {...this.props}\n      />\n    );\n  }\n}\n\nconst SignUpProviderButtons = () => (\n  <CompSignUpProviderButtonsView\n  providers={providers.filter((item) => item.id !== 'email')}\n  getLinkUrl={getLinkUrl}\n  />\n);\n\nexport { SignUpForm, SignUpProviderButtons };\n","export * from './SignUpForm';\n"],"sourceRoot":""}