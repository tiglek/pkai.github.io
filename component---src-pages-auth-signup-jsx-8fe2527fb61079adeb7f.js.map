{"version":3,"sources":["webpack:///../node_modules/@material-ui/core/esm/FormLabel/FormLabel.js","webpack:///../node_modules/@material-ui/core/esm/InputLabel/InputLabel.js","webpack:///../node_modules/@material-ui/core/esm/FormControl/FormControl.js","webpack:///../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","webpack:///../node_modules/@material-ui/core/esm/TextField/TextField.js","webpack:///./src/views/vanilla/page-auth-signup.jsx","webpack:///./src/pages/auth/signup.jsx","webpack:///../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","webpack:///../node_modules/@material-ui/core/esm/internal/svg-icons/createSvgIcon.js","webpack:///./src/constants/providers.ts","webpack:///./src/components/SignUp/view-md/styles.js","webpack:///./src/components/SignUp/view-md/sign-up-form.jsx","webpack:///./src/components/SignUp/SignUpForm.tsx","webpack:///./src/components/SignUp/index.ts","webpack:///../node_modules/@material-ui/core/esm/Input/Input.js","webpack:///../node_modules/@material-ui/core/esm/FilledInput/FilledInput.js","webpack:///../node_modules/@material-ui/core/esm/Select/SelectInput.js","webpack:///../node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDropDown.js","webpack:///../node_modules/@material-ui/core/esm/NativeSelect/NativeSelectInput.js","webpack:///../node_modules/@material-ui/core/esm/NativeSelect/NativeSelect.js","webpack:///../node_modules/@material-ui/core/esm/Select/Select.js","webpack:///../node_modules/@material-ui/core/esm/OutlinedInput/NotchedOutline.js","webpack:///../node_modules/@material-ui/core/esm/OutlinedInput/OutlinedInput.js"],"names":["forwardRef","props","ref","children","classes","classNameProp","className","_props$component","component","Component","other","disabled","error","filled","focused","required","muiFormControl","useFormControl","fcs","formControlState","states","createElement","root","asterisk","withStyles","theme","color","palette","text","secondary","typography","body1","lineHeight","padding","primary","type","main","name","_props$disableAnimati","disableAnimation","shrinkProp","margin","shrink","variant","adornedStart","formControl","animated","dense","marginDense","outlined","display","transformOrigin","position","left","top","transform","transition","transitions","create","duration","shorter","easing","easeOut","zIndex","pointerEvents","_props$disabled","_props$error","_props$fullWidth","fullWidth","_props$hiddenLabel","hiddenLabel","_props$margin","_props$required","_props$variant","useState","initialAdornedStart","Children","forEach","child","input","_React$useState2","initialFilled","setFilled","_React$useState3","setFocused","onFilled","useCallback","childContext","onBlur","onEmpty","onFocus","registerEffect","FormControlContext","Provider","value","concat","flexDirection","minWidth","border","verticalAlign","marginNormal","marginTop","marginBottom","width","contained","caption","textAlign","minHeight","variantComponent","standard","Input","FilledInput","OutlinedInput","autoComplete","autoFocus","defaultValue","FormHelperTextProps","helperText","id","InputLabelProps","inputProps","InputProps","inputRef","label","multiline","onChange","placeholder","rows","rowsMax","_props$select","select","SelectProps","_React$useState","labelWidth","setLabelWidth","labelRef","useRef","useEffect","labelNode","findDOMNode","current","offsetWidth","InputMore","notched","helperTextId","undefined","InputComponent","InputElement","htmlFor","Select","withTranslation","t","SignUp","useContext","createSvgIcon","path","displayName","memo","muiName","providers","provider","enabled","getLinkUrl","providerName","API_BASE_URL","makeStyles","creatingButtonContainer","height","justifyContent","alignItems","createAccountButton","textTransform","errorMessage","textFieldUnderline","borderBottomColor","light","textField","circularProgress","marginLeft","SignUpForm","onSubmit","username","onChangeUsername","email","onChangeEmail","password","onChangePassword","isSubmitButtonDisabled","passwordConfirmation","onChangePasswordConfirmation","inProgress","useStyles","TextField","underline","Fade","in","Typography","CircularProgress","size","Button","onClick","INITIAL_STATE","state","disablePasswordConfirm","event","setState","signup","then","res","kind","navigate","PATH_LANDING","replace","message","toString","preventDefault","target","this","isValidFormData","disableUnderline","_props$inputComponent","inputComponent","_props$multiline","_props$type","bottomLineColor","borderBottom","bottom","content","right","borderBottomStyle","inputMarginDense","inputMultiline","inputTypeSearch","backgroundColor","borderTopLeftRadius","shape","borderRadius","borderTopRightRadius","paddingLeft","adornedEnd","paddingRight","paddingTop","paddingBottom","inputHiddenLabel","inputSelect","inputAdornedStart","inputAdornedEnd","areEqualValues","a","b","String","autoWidth","displayEmpty","IconComponent","inputRefProp","_props$MenuProps","MenuProps","multiple","onClose","onOpen","openProp","open","readOnly","renderValue","SelectDisplayProps","tabIndexProp","tabIndex","displayRef","ignoreNextBlur","isOpenControlled","menuMinWidthState","setMenuMinWidthState","openState","setOpenState","forceUpdate","handleRef","useImperativeHandle","focus","node","n","displaySingle","update","clientWidth","handleItemClick","newValue","Array","isArray","itemIndex","indexOf","push","splice","persist","displayMultiple","computeDisplay","items","map","isValidElement","selected","Error","some","v","cloneElement","role","join","menuMinWidth","Fragment","selectMenu","onKeyDown","key","stopPropagation","trim","isEmpty","dangerouslySetInnerHTML","__html","icon","Menu","anchorEl","MenuListProps","disableListWrap","PaperProps","style","d","styles","userSelect","cursor","background","paper","textOverflow","whiteSpace","overflow","action","active","iconFilled","iconOutlined","defaultInput","_props$IconComponent","ArrowDropDown","_props$input","_ref","_ref2","_props$autoWidth","_props$displayEmpty","_props$multiple","_props$native","_native","variantProps","_props$labelWidth","mergeClasses","baseClasses","newClasses","labelWidthProp","align","useTheme","direction","legend","borderStyle","borderWidth","InputBase","renderSuffix","notchedOutline","Boolean","startAdornment","borderColor"],"mappings":"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","file":"component---src-pages-auth-signup-jsx-8fe2527fb61079adeb7f.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.body1, {\n      lineHeight: 1,\n      padding: 0,\n      '&$focused': {\n        color: theme.palette.primary[theme.palette.type === 'light' ? 'dark' : 'light']\n      },\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Styles applied to the asterisk element. */\n    asterisk: {\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }\n  };\n};\nvar FormLabel = React.forwardRef(function FormLabel(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'label' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      required = props.required,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['required', 'focused', 'disabled', 'error', 'filled']\n  });\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classNameProp, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),\n    ref: ref\n  }, other), children, fcs.required && React.createElement(\"span\", {\n    className: clsx(classes.asterisk, fcs.error && classes.error)\n  }, \"\\u2009\", '*'));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormLabel'\n})(FormLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport FormLabel from '../FormLabel';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      transformOrigin: 'top left'\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Pseudo-class applied to the asterisk element. */\n    asterisk: {},\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      // slight alteration to spec spacing to match visual spec result\n      transform: 'translate(0, 24px) scale(1)'\n    },\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      // Compensation for the `Input.inputDense` style.\n      transform: 'translate(0, 21px) scale(1)'\n    },\n\n    /* Styles applied to the `input` element if `shrink={true}`. */\n    shrink: {\n      transform: 'translate(0, 1.5px) scale(0.75)',\n      transformOrigin: 'top left'\n    },\n\n    /* Styles applied to the `input` element if `disableAnimation={false}`. */\n    animated: {\n      transition: theme.transitions.create(['color', 'transform'], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"`. */\n    filled: {\n      // Chrome's autofill feature gives the input field a yellow background.\n      // Since the input field is behind the label in the HTML tree,\n      // the input field is drawn last and hides the label with an opaque background color.\n      // zIndex: 1 will raise the label above opaque background-colors of input.\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(12px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(12px, 17px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(12px, 10px) scale(0.75)',\n        '&$marginDense': {\n          transform: 'translate(12px, 7px) scale(0.75)'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      // see comment above on filled.zIndex\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(14px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(14px, 12px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(14px, -6px) scale(0.75)'\n      }\n    }\n  };\n};\nvar InputLabel = React.forwardRef(function InputLabel(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$disableAnimati = props.disableAnimation,\n      disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati,\n      margin = props.margin,\n      shrinkProp = props.shrink,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableAnimation\", \"margin\", \"shrink\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var shrink = shrinkProp;\n\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['margin', 'variant']\n  });\n  return React.createElement(FormLabel, _extends({\n    \"data-shrink\": shrink,\n    className: clsx(classes.root, className, muiFormControl && classes.formControl, !disableAnimation && classes.animated, shrink && classes.shrink, {\n      dense: classes.marginDense\n    }[fcs.margin], {\n      filled: classes.filled,\n      outlined: classes.outlined\n    }[fcs.variant]),\n    classes: {\n      focused: classes.focused,\n      disabled: classes.disabled,\n      error: classes.error,\n      required: classes.required,\n      asterisk: classes.asterisk\n    },\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes = {\n  /**\n   * The contents of the `InputLabel`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the transition animation is disabled.\n   */\n  disableAnimation: PropTypes.bool,\n\n  /**\n   * If `true`, apply disabled class.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * if `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputLabel'\n})(InputLabel);","import \"core-js/modules/es6.array.for-each\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport { isMuiElement } from '../utils/reactHelpers';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: there are multiple InputBase components inside a FromControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    hiddenLabel: hiddenLabel,\n    margin: margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 8,\n      lineHeight: '1em',\n      minHeight: '1em',\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      margin: '8px 14px 0'\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = React.forwardRef(function FormHelperText(props, ref) {\n  var classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, classNameProp, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, {\n      dense: classes.marginDense\n    }[fcs.margin]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import \"core-js/modules/es6.function.name\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      autoFocus = props.autoFocus,\n      children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      defaultValue = props.defaultValue,\n      error = props.error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      fullWidth = props.fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      multiline = props.multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"defaultValue\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  var _React$useState = React.useState(0),\n      labelWidth = _React$useState[0],\n      setLabelWidth = _React$useState[1];\n\n  var labelRef = React.useRef(null);\n  React.useEffect(function () {\n    if (variant === 'outlined') {\n      // #StrictMode ready\n      var labelNode = ReactDOM.findDOMNode(labelRef.current);\n      setLabelWidth(labelNode != null ? labelNode.offsetWidth : 0);\n    }\n  }, [variant, required, label]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    InputMore.labelWidth = labelWidth;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return React.createElement(FormControl, _extends({\n    className: clsx(classes.root, classNameProp),\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    variant: variant\n  }, other), label && React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    ref: labelRef\n  }, InputLabelProps), label), select ? React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","\nimport React from 'react';\nimport { withTranslation } from \"react-i18next\"\n\nimport { SignUpForm } from '../../components/SignUp';\n\nconst I18N_ID = 'Others';\n\n/**\n * Sign-up\n * \n * @param {function} t i18n function\n */\nconst PageAuthSignup = ({\n  t\n}) => (\n  <>\n    <h1>{t(\"auth.signup\")}</h1>\n\n    <SignUpForm t={t} />\n  </>\n);\n\nexport default withTranslation(I18N_ID)(PageAuthSignup);\n","import React from 'react';\n\nimport AuthSignupView from '../../views/vanilla/page-auth-signup';\n\nexport default () => (\n  <>\n    <AuthSignupView />\n  </>\n);\n","import React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../../SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({}, props, {\n      ref: ref\n    }), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import {API_BASE_URL} from '../config';\n\nconst providers = [\n//  'discord', \n//  'facebook', \n//  'github', \n{id: 'email', provider: 'email', enabled: true},\n{id: 'google.com', provider: 'google', enabled: true}\n//  'microsoft', \n//  'twitch', \n//  'twitter'\n];\n\nexport function getLinkUrl(providerName: string): string {\n  return `${API_BASE_URL}/connect/${providerName}`;\n}\n\nexport function isAvailable(providerId: string): boolean {\n  for (let i = 0; i < providers.length; i ++) {\n    if (providerId === providers[i].id) return providers[i].enabled;\n  }\n  return false;\n}\n\nexport default providers;\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  creatingButtonContainer: {\n    marginTop: theme.spacing(2.5),\n    height: 46,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  createAccountButton: {\n    height: 46,\n    textTransform: \"none\",\n  },\n  errorMessage: {\n    textAlign: \"center\",\n  },\n  textFieldUnderline: {\n    \"&:before\": {\n      borderBottomColor: theme.palette.primary.light,\n    },\n    \"&:after\": {\n      borderBottomColor: theme.palette.primary.main,\n    },\n    \"&:hover:before\": {\n      borderBottomColor: `${theme.palette.primary.light} !important`,\n    },\n  },\n  textField: {\n    borderBottomColor: theme.palette.background.light,\n  },\n  circularProgress: {\n    marginLeft: theme.spacing(4),\n  },\n}));\n","import React from 'react';\nimport {\n  CircularProgress,\n  Typography,\n  Button,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\";\n\n/**\n * Sign-up form view\n * \n * @param {function} t i18n function\n */\nconst SignUpForm = ({\n  t,\n  onSubmit,\n  username,\n  onChangeUsername,\n  email,\n  onChangeEmail,\n  password,\n  onChangePassword,\n  passwordConfirmation,\n  onChangePasswordConfirmation,\n  isSubmitButtonDisabled,\n  errorMessage,\n  inProgress,\n}) => {\n  const classes = useStyles();\n\n  return (\n  <>\n    <TextField\n      name=\"username\"\n      InputProps={{\n        classes: {\n          underline: classes.textFieldUnderline,\n          input: classes.textField,\n        },\n      }}\n      value={username}\n      onChange={onChangeUsername}\n      margin=\"normal\"\n      placeholder=\"Full Name\"\n      type=\"text\"\n      fullWidth\n    />\n    <TextField\n      name=\"email\"\n      InputProps={{\n        classes: {\n          underline: classes.textFieldUnderline,\n          input: classes.textField,\n        },\n      }}\n      value={email}\n      onChange={onChangeEmail}\n      margin=\"normal\"\n      placeholder=\"Email Adress\"\n      type=\"email\"\n      fullWidth\n    />\n    <TextField\n      name=\"password\"\n      InputProps={{\n        classes: {\n          underline: classes.textFieldUnderline,\n          input: classes.textField,\n        },\n      }}\n      value={password}\n      onChange={onChangePassword}\n      margin=\"normal\"\n      placeholder=\"Password\"\n      type=\"password\"\n      fullWidth\n    />\n\n    <Fade in={!!errorMessage}>\n      <Typography color=\"secondary\" className={classes.errorMessage}>\n        Something is wrong with your sign-up information :(\n      </Typography>\n    </Fade>\n\n    <div className={classes.creatingButtonContainer}>\n      {inProgress ? (\n        <CircularProgress size={26} className={classes.circularProgress}/>\n      ) : (\n        <Button\n          onClick={onSubmit}\n          disabled={isSubmitButtonDisabled}\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          className={classes.createAccountButton}\n        >\n          Create your account\n        </Button>\n      )}\n    </div>\n\n  </>  \n  );\n}\n\nexport default SignUpForm;\n","import React, { Component } from 'react';\nimport { navigate } from 'gatsby';\n\nimport { signup } from '../../services/auth';\nimport { PATH_LANDING } from '../../constants/routes';\nimport providers, {getLinkUrl} from '../../constants/providers';\n\nimport { ComponentProps } from '../ComponentProps.d';\n\nimport SignUpFormView from './view-md/sign-up-form';\nimport SignUpProviderButtonsView from './view/sign-up-provider-buttons';\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n  error: '',\n  inProgress: false,\n};\n\ninterface SignUpFormProps extends ComponentProps {\n}\n\ntype SignUpFormStates = typeof INITIAL_STATE;\n\nclass SignUpForm extends Component<SignUpFormProps, SignUpFormStates> {\n\n  state = INITIAL_STATE;\n  disablePasswordConfirm = true;\n\n  onSubmit = (event: React.FormEvent) => {\n    const { username, email, password } = this.state;\n    this.setState({inProgress: true});\n\n    signup({username, email, password})\n      .then((res) => {\n        if (!res || res.kind !== 'ok') {\n          this.setState({...INITIAL_STATE, error: res ? res.kind : 'unknown-error'});\n        }\n        else {\n          this.setState({ ...INITIAL_STATE });\n          navigate(PATH_LANDING, { replace: true });\n        }\n      })\n      .catch(error => {\n        this.setState({ error: error.message || error.toString() });\n      })\n      .finally(() => this.setState({inProgress:false}));\n\n    event.preventDefault();\n  };\n\n  onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // !!! The variable, 'name' shold be 'username', 'email' or 'password'\n    //@ts-ignore\n    const { name, value } = event.target;\n    //@ts-ignore\n    this.setState({ [name]: value });\n  };\n\n  isValidFormData(): boolean {\n    const { username, email, password, passwordConfirmation } = this.state;\n    // simple check\n    return !!(username && password && email && (this.disablePasswordConfirm || (password === passwordConfirmation)));\n  }\n\n  render() {\n    const isSubmitButtonDisabled = !this.isValidFormData();\n    const { \n      username, email, password, passwordConfirmation, error, inProgress \n    } = this.state;\n\n    // TODO: fix type error\n    // @ts-ignore\n    return ( <SignUpFormView\n      onSubmit={this.onSubmit}\n      username={username}\n      onChangeUsername={this.onChange}\n      email={email}\n      onChangeEmail={this.onChange}\n      password={password}\n      onChangePassword={this.onChange}\n      passwordConfirmation={passwordConfirmation}\n      onChangePasswordConfirmation={this.onChange}\n      isSubmitButtonDisabled={isSubmitButtonDisabled}\n      errorMessage={error}\n      inProgress={inProgress}\n      {...this.props}\n      />\n    );\n  }\n}\n\nconst SignUpProviderButtons = () => (\n  <SignUpProviderButtonsView\n  providers={providers.filter((item) => item.id !== 'email')}\n  getLinkUrl={getLinkUrl}\n  />\n);\n\nexport { SignUpForm, SignUpProviderButtons };\n","export * from './SignUpForm';\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport InputBase from '../InputBase';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var light = theme.palette.type === 'light';\n  var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {\n      'label + &': {\n        marginTop: 16\n      }\n    },\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `disableUnderline={false}`. */\n    underline: {\n      '&:after': {\n        borderBottom: \"2px solid \".concat(theme.palette.primary[light ? 'dark' : 'light']),\n        left: 0,\n        bottom: 0,\n        // Doing the other way around crash on IE 11 \"''\" https://github.com/cssinjs/jss/issues/242\n        content: '\"\"',\n        position: 'absolute',\n        right: 0,\n        transform: 'scaleX(0)',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shorter,\n          easing: theme.transitions.easing.easeOut\n        }),\n        pointerEvents: 'none' // Transparent to the hover style.\n\n      },\n      '&$focused:after': {\n        transform: 'scaleX(1)'\n      },\n      '&$error:after': {\n        borderBottomColor: theme.palette.error.main,\n        transform: 'scaleX(1)' // error is always underlined in red\n\n      },\n      '&:before': {\n        borderBottom: \"1px solid \".concat(bottomLineColor),\n        left: 0,\n        bottom: 0,\n        // Doing the other way around crash on IE 11 \"''\" https://github.com/cssinjs/jss/issues/242\n        content: '\"\\\\00a0\"',\n        position: 'absolute',\n        right: 0,\n        transition: theme.transitions.create('border-bottom-color', {\n          duration: theme.transitions.duration.shorter\n        }),\n        pointerEvents: 'none' // Transparent to the hover style.\n\n      },\n      '&:hover:not($disabled):before': {\n        borderBottom: \"2px solid \".concat(theme.palette.text.primary),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          borderBottom: \"1px solid \".concat(bottomLineColor)\n        }\n      },\n      '&$disabled:before': {\n        borderBottomStyle: 'dotted'\n      }\n    },\n\n    /* Styles applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {},\n\n    /* Styles applied to the `input` element. */\n    input: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {},\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {},\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {}\n  };\n};\nvar Input = React.forwardRef(function Input(props, ref) {\n  var disableUnderline = props.disableUnderline,\n      classes = props.classes,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$inputComponent = props.inputComponent,\n      inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'text' : _props$type,\n      other = _objectWithoutProperties(props, [\"disableUnderline\", \"classes\", \"fullWidth\", \"inputComponent\", \"multiline\", \"type\"]);\n\n  return React.createElement(InputBase, _extends({\n    classes: _extends({}, classes, {\n      root: clsx(classes.root, !disableUnderline && classes.underline),\n      underline: null\n    }),\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Input.propTypes = {\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the wrapper element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the input will not have an underline.\n   */\n  disableUnderline: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the native input.\n   * Either a string to use a DOM element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nInput.muiName = 'Input';\nexport default withStyles(styles, {\n  name: 'MuiInput'\n})(Input);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport InputBase from '../InputBase';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var light = theme.palette.type === 'light';\n  var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';\n  var backgroundColor = light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)';\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      backgroundColor: backgroundColor,\n      borderTopLeftRadius: theme.shape.borderRadius,\n      borderTopRightRadius: theme.shape.borderRadius,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      }),\n      '&:hover': {\n        backgroundColor: light ? 'rgba(0, 0, 0, 0.13)' : 'rgba(255, 255, 255, 0.13)',\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: backgroundColor\n        }\n      },\n      '&$focused': {\n        backgroundColor: light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)'\n      },\n      '&$disabled': {\n        backgroundColor: light ? 'rgba(0, 0, 0, 0.12)' : 'rgba(255, 255, 255, 0.12)'\n      }\n    },\n\n    /* Styles applied to the root element if `disableUnderline={false}`. */\n    underline: {\n      '&:after': {\n        borderBottom: \"2px solid \".concat(theme.palette.primary[light ? 'dark' : 'light']),\n        left: 0,\n        bottom: 0,\n        // Doing the other way around crash on IE 11 \"''\" https://github.com/cssinjs/jss/issues/242\n        content: '\"\"',\n        position: 'absolute',\n        right: 0,\n        transform: 'scaleX(0)',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shorter,\n          easing: theme.transitions.easing.easeOut\n        }),\n        pointerEvents: 'none' // Transparent to the hover style.\n\n      },\n      '&$focused:after': {\n        transform: 'scaleX(1)'\n      },\n      '&$error:after': {\n        borderBottomColor: theme.palette.error.main,\n        transform: 'scaleX(1)' // error is always underlined in red\n\n      },\n      '&:before': {\n        borderBottom: \"1px solid \".concat(bottomLineColor),\n        left: 0,\n        bottom: 0,\n        // Doing the other way around crash on IE 11 \"''\" https://github.com/cssinjs/jss/issues/242\n        content: '\"\\\\00a0\"',\n        position: 'absolute',\n        right: 0,\n        transition: theme.transitions.create('border-bottom-color', {\n          duration: theme.transitions.duration.shorter\n        }),\n        pointerEvents: 'none' // Transparent to the hover style.\n\n      },\n      '&:hover:before': {\n        borderBottom: \"1px solid \".concat(theme.palette.text.primary)\n      },\n      '&$disabled:before': {\n        borderBottomStyle: 'dotted'\n      }\n    },\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {\n      paddingLeft: 12\n    },\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {\n      paddingRight: 12\n    },\n\n    /* Styles applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: '27px 12px 10px',\n      '&$marginDense': {\n        paddingTop: 23,\n        paddingBottom: 6\n      }\n    },\n\n    /* Styles applied to the `input` element. */\n    input: {\n      padding: '27px 12px 10px'\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 23,\n      paddingBottom: 6\n    },\n\n    /* Styles applied to the `input` if in `<FormControl hiddenLabel />`. */\n    inputHiddenLabel: {\n      paddingTop: 18,\n      paddingBottom: 19,\n      '&$inputMarginDense': {\n        paddingTop: 10,\n        paddingBottom: 11\n      }\n    },\n\n    /* Styles applied to the `input` element if `select={true}`. */\n    inputSelect: {\n      paddingRight: 24\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {\n      paddingLeft: 0\n    },\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {\n      paddingRight: 0\n    }\n  };\n};\nvar FilledInput = React.forwardRef(function FilledInput(props, ref) {\n  var disableUnderline = props.disableUnderline,\n      classes = props.classes,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$inputComponent = props.inputComponent,\n      inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'text' : _props$type,\n      other = _objectWithoutProperties(props, [\"disableUnderline\", \"classes\", \"fullWidth\", \"inputComponent\", \"multiline\", \"type\"]);\n\n  return React.createElement(InputBase, _extends({\n    classes: _extends({}, classes, {\n      root: clsx(classes.root, !disableUnderline && classes.underline),\n      underline: null\n    }),\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FilledInput.propTypes = {\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the wrapper element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the input will not have an underline.\n   */\n  disableUnderline: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the native input.\n   * Either a string to use a DOM element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nFilledInput.muiName = 'Input';\nexport default withStyles(styles, {\n  name: 'MuiFilledInput'\n})(FilledInput);","import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.string.trim\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '../utils/helpers';\nimport { refType } from '@material-ui/utils';\nimport Menu from '../Menu/Menu';\nimport { isFilled } from '../InputBase/utils';\nimport { useForkRef } from '../utils/reactHelpers';\n\nfunction areEqualValues(a, b) {\n  if (_typeof(b) === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n/**\n * @ignore - internal component.\n */\n\n\nvar SelectInput = React.forwardRef(function SelectInput(props, ref) {\n  var autoFocus = props.autoFocus,\n      autoWidth = props.autoWidth,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      disabled = props.disabled,\n      displayEmpty = props.displayEmpty,\n      IconComponent = props.IconComponent,\n      inputRefProp = props.inputRef,\n      _props$MenuProps = props.MenuProps,\n      MenuProps = _props$MenuProps === void 0 ? {} : _props$MenuProps,\n      multiple = props.multiple,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onFocus = props.onFocus,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      readOnly = props.readOnly,\n      renderValue = props.renderValue,\n      required = props.required,\n      SelectDisplayProps = props.SelectDisplayProps,\n      tabIndexProp = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"required\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  var inputRef = React.useRef(null);\n  var displayRef = React.useRef(null);\n  var ignoreNextBlur = React.useRef(false);\n\n  var _React$useRef = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(),\n      menuMinWidthState = _React$useState[0],\n      setMenuMinWidthState = _React$useState[1];\n\n  var _React$useState2 = React.useState(false),\n      openState = _React$useState2[0],\n      setOpenState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      forceUpdate = _React$useState3[1];\n\n  var handleRef = useForkRef(ref, inputRefProp);\n  React.useImperativeHandle(handleRef, function () {\n    return {\n      focus: function focus() {\n        displayRef.current.focus();\n      },\n      node: inputRef.current,\n      value: value\n    };\n  }, [value]);\n  React.useEffect(function () {\n    if (isOpenControlled && openProp) {\n      // Focus the display node so the focus is restored on this element once\n      // the menu is closed.\n      displayRef.current.focus(); // Rerender with the resolve `displayRef` reference.\n\n      forceUpdate(function (n) {\n        return !n;\n      });\n    }\n\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus, isOpenControlled, openProp]);\n\n  var update = function update(open, event) {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayRef.current.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  var handleClick = function handleClick(event) {\n    // Opening the menu is going to blur the. It will be focused back when closed.\n    ignoreNextBlur.current = true;\n    update(true, event);\n  };\n\n  var handleClose = function handleClose(event) {\n    update(false, event);\n  };\n\n  var handleItemClick = function handleItemClick(child) {\n    return function (event) {\n      if (!multiple) {\n        update(false, event);\n      }\n\n      if (onChange) {\n        var newValue;\n\n        if (multiple) {\n          newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n          var itemIndex = value.indexOf(child.props.value);\n\n          if (itemIndex === -1) {\n            newValue.push(child.props.value);\n          } else {\n            newValue.splice(itemIndex, 1);\n          }\n        } else {\n          newValue = child.props.value;\n        }\n\n        event.persist();\n        event.target = {\n          value: newValue,\n          name: name\n        };\n        onChange(event, child);\n      }\n    };\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (ignoreNextBlur.current === true) {\n      // The parent components are relying on the bubbling of the event.\n      event.stopPropagation();\n      ignoreNextBlur.current = false;\n      return;\n    }\n\n    if (onBlur) {\n      event.persist();\n      event.target = {\n        value: value,\n        name: name\n      };\n      onBlur(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (!readOnly) {\n      var validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault(); // Opening the menu is going to blur the. It will be focused back when closed.\n\n        ignoreNextBlur.current = true;\n        update(true, event);\n      }\n    }\n  };\n\n  var open = isOpenControlled && displayRef.current ? openProp : openState;\n  delete other['aria-invalid'];\n  var display;\n  var displaySingle;\n  var displayMultiple = [];\n  var computeDisplay = false; // No need to display any value if the field is empty.\n\n  if (isFilled(props) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  var items = React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (child.type === React.Fragment) {\n        console.error([\"Material-UI: the Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error('Material-UI: the `value` prop must be an array ' + 'when using the `Select` component with `multiple`.');\n      }\n\n      selected = value.some(function (v) {\n        return areEqualValues(v, child.props.value);\n      });\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    return React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      role: 'option',\n      selected: selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  var menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayRef.current) {\n    menuMinWidth = displayRef.current.clientWidth;\n  }\n\n  var tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", _extends({\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes.selectMenu, classes[variant], className, disabled && classes.disabled),\n    ref: displayRef,\n    tabIndex: tabIndex,\n    role: \"button\",\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": open ? \"menu-\".concat(name || '') : undefined,\n    onKeyDown: handleKeyDown,\n    onBlur: handleBlur,\n    onClick: disabled || readOnly ? null : handleClick,\n    onFocus: onFocus // The id can help with end-to-end testing automation.\n    ,\n    id: name ? \"select-\".concat(name) : undefined\n  }, SelectDisplayProps), isEmpty(display) ? // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : display), React.createElement(\"input\", _extends({\n    value: Array.isArray(value) ? value.join(',') : value,\n    name: name,\n    ref: inputRef,\n    type: \"hidden\",\n    autoFocus: autoFocus\n  }, other)), React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"icon\".concat(capitalize(variant))])\n  }), React.createElement(Menu, _extends({\n    id: \"menu-\".concat(name || ''),\n    anchorEl: displayRef.current,\n    open: open,\n    onClose: handleClose\n  }, MenuProps, {\n    MenuListProps: _extends({\n      role: 'listbox',\n      disableListWrap: true\n    }, MenuProps.MenuListProps),\n    PaperProps: _extends({}, MenuProps.PaperProps, {\n      style: _extends({\n        minWidth: menuMinWidth\n      }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n    })\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If true, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the select will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control `select` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {*} value The `value` provided to the component.\n   * @returns {ReactElement}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any.isRequired,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { capitalize } from '../utils/helpers';\n/**\n * @ignore - internal component.\n */\n\nvar NativeSelectInput = React.forwardRef(function NativeSelectInput(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      disabled = props.disabled,\n      IconComponent = props.IconComponent,\n      inputRef = props.inputRef,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disabled\", \"IconComponent\", \"inputRef\", \"variant\"]);\n\n  return React.createElement(React.Fragment, null, React.createElement(\"select\", _extends({\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes[variant], className, disabled && classes.disabled),\n    disabled: disabled,\n    ref: inputRef || ref\n  }, other)), props.multiple ? null : React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"icon\".concat(capitalize(variant))])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelectInput.propTypes = {\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the select will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * Use that prop to pass a ref to the native select element.\n   * @deprecated\n   */\n  inputRef: refType,\n\n  /**\n   * @ignore\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default NativeSelectInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NativeSelectInput from './NativeSelectInput';\nimport withStyles from '../styles/withStyles';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport Input from '../Input';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the select component `root` class. */\n    root: {},\n\n    /* Styles applied to the select component `select` class. */\n    select: {\n      '-moz-appearance': 'none',\n      // Reset\n      '-webkit-appearance': 'none',\n      // Reset\n      // When interacting quickly, the text can end up selected.\n      // Native select can't be selected either.\n      userSelect: 'none',\n      borderRadius: 0,\n      // Reset\n      minWidth: 16,\n      // So it doesn't collapse.\n      cursor: 'pointer',\n      '&:focus': {\n        // Show that it's not an text input\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',\n        borderRadius: 0 // Reset Chrome style\n\n      },\n      // Remove IE 11 arrow\n      '&::-ms-expand': {\n        display: 'none'\n      },\n      '&$disabled': {\n        cursor: 'default'\n      },\n      '&[multiple]': {\n        height: 'auto'\n      },\n      '&:not([multiple]) option, &:not([multiple]) optgroup': {\n        backgroundColor: theme.palette.background.paper\n      }\n    },\n\n    /* Styles applied to the select component if `variant=\"filled\"`. */\n    filled: {},\n\n    /* Styles applied to the select component if `variant=\"outlined\"`. */\n    outlined: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the select component `selectMenu` class. */\n    selectMenu: {\n      height: 'auto',\n      // Reset\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n\n    /* Pseudo-class applied to the select component `disabled` class. */\n    disabled: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      // We use a position absolute over a flexbox in order to forward the pointer events\n      // to the input.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 12px)',\n      // Center vertically\n      color: theme.palette.action.active,\n      pointerEvents: 'none' // Don't block pointer events on the select under the icon.\n\n    },\n\n    /* Styles applied to the icon component if `variant=\"filled\"`. */\n    iconFilled: {\n      right: 7\n    },\n\n    /* Styles applied to the icon component if `variant=\"outlined\"`. */\n    iconOutlined: {\n      right: 7\n    }\n  };\n};\nvar defaultInput = React.createElement(Input, null);\n/**\n * An alternative to `<Select native />` with a much smaller bundle size footprint.\n */\n\nvar NativeSelect = React.forwardRef(function NativeSelect(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? ArrowDropDownIcon : _props$IconComponent,\n      _props$input = props.input,\n      input = _props$input === void 0 ? defaultInput : _props$input,\n      inputProps = props.inputProps,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"IconComponent\", \"input\", \"inputProps\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant']\n  });\n  return React.cloneElement(input, _extends({\n    // Most of the logic is implemented in `NativeSelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent: NativeSelectInput,\n    select: true,\n    inputProps: _extends({\n      children: children,\n      classes: classes,\n      IconComponent: IconComponent,\n      variant: fcs.variant,\n      type: undefined\n    }, inputProps, {}, input ? input.props.inputProps : {}),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelect.propTypes = {\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   */\n  input: PropTypes.element,\n\n  /**\n   * Attributes applied to the `select` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input value. The DOM API casts this to a string.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nNativeSelect.muiName = 'Select';\nexport default withStyles(styles, {\n  name: 'MuiNativeSelect'\n})(NativeSelect);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { mergeClasses } from '@material-ui/styles';\nimport SelectInput from './SelectInput';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport Input from '../Input';\nimport { styles as nativeSelectStyles } from '../NativeSelect/NativeSelect';\nimport NativeSelectInput from '../NativeSelect/NativeSelectInput';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nexport var styles = nativeSelectStyles;\n\nvar _ref = React.createElement(Input, null);\n\nvar _ref2 = React.createElement(FilledInput, null);\n\nvar Select = React.forwardRef(function Select(props, ref) {\n  var _props$autoWidth = props.autoWidth,\n      autoWidth = _props$autoWidth === void 0 ? false : _props$autoWidth,\n      children = props.children,\n      classes = props.classes,\n      _props$displayEmpty = props.displayEmpty,\n      displayEmpty = _props$displayEmpty === void 0 ? false : _props$displayEmpty,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? ArrowDropDownIcon : _props$IconComponent,\n      input = props.input,\n      inputProps = props.inputProps,\n      MenuProps = props.MenuProps,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$native = props[\"native\"],\n      _native = _props$native === void 0 ? false : _props$native,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      renderValue = props.renderValue,\n      SelectDisplayProps = props.SelectDisplayProps,\n      _props$variant = props.variant,\n      variantProps = _props$variant === void 0 ? 'standard' : _props$variant,\n      _props$labelWidth = props.labelWidth,\n      labelWidth = _props$labelWidth === void 0 ? 0 : _props$labelWidth,\n      other = _objectWithoutProperties(props, [\"autoWidth\", \"children\", \"classes\", \"displayEmpty\", \"IconComponent\", \"input\", \"inputProps\", \"MenuProps\", \"multiple\", \"native\", \"onClose\", \"onOpen\", \"open\", \"renderValue\", \"SelectDisplayProps\", \"variant\", \"labelWidth\"]);\n\n  var inputComponent = _native ? NativeSelectInput : SelectInput;\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant']\n  });\n  var variant = fcs.variant || variantProps;\n  var InputComponent = input || {\n    standard: _ref,\n    outlined: React.createElement(OutlinedInput, {\n      labelWidth: labelWidth\n    }),\n    filled: _ref2\n  }[variant];\n  return React.cloneElement(InputComponent, _extends({\n    // Most of the logic is implemented in `SelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent: inputComponent,\n    select: true,\n    inputProps: _extends({\n      children: children,\n      IconComponent: IconComponent,\n      variant: variant,\n      type: undefined,\n      // We render a select. We can ignore the type provided by the `Input`.\n      multiple: multiple\n    }, _native ? {} : {\n      autoWidth: autoWidth,\n      displayEmpty: displayEmpty,\n      MenuProps: MenuProps,\n      onClose: onClose,\n      onOpen: onOpen,\n      open: open,\n      renderValue: renderValue,\n      SelectDisplayProps: SelectDisplayProps\n    }, {}, inputProps, {\n      classes: inputProps ? mergeClasses({\n        baseClasses: classes,\n        newClasses: inputProps.classes,\n        Component: Select\n      }) : classes\n    }, input ? input.props.inputProps : {}),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Select.propTypes = {\n  /**\n   * If true, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.\n   *\n   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * If `true`, a value is displayed even if no items are selected.\n   *\n   * In order to display a meaningful value, a function should be passed to the `renderValue` prop which returns the value to be displayed when no items are selected.\n   * You can only use it when the `native` prop is `false` (default).\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   */\n  input: PropTypes.element,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * When `native` is `true`, the attributes are applied on the `select` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * The label width to be used on OutlinedInput.\n   * This prop is required when the `variant` prop is `outlined`.\n   */\n  labelWidth: PropTypes.number,\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * If `true`, the component will be using a native `select` element.\n   */\n  \"native\": PropTypes.bool,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected when `native` is `false` (default).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control `select` open state.\n   * You can only use it when the `native` prop is `false` (default).\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   * You can only use it when the `native` prop is `false` (default).\n   *\n   * @param {*} value The `value` provided to the component.\n   * @returns {ReactElement}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * The input value.\n   * This prop is required when the `native` prop is `false` (default).\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nSelect.muiName = 'Select';\nexport default withStyles(styles, {\n  name: 'MuiSelect'\n})(Select);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  var align = theme.direction === 'rtl' ? 'right' : 'left';\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      top: -5,\n      left: 0,\n      margin: 0,\n      padding: 0,\n      pointerEvents: 'none',\n      borderRadius: theme.shape.borderRadius,\n      borderStyle: 'solid',\n      borderWidth: 1,\n      // Match the Input Label\n      transition: theme.transitions.create([\"padding-\".concat(align), 'border-color', 'border-width'], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the legend element. */\n    legend: {\n      textAlign: 'left',\n      padding: 0,\n      lineHeight: '11px',\n      transition: theme.transitions.create('width', {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar NotchedOutline = React.forwardRef(function NotchedOutline(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      labelWidthProp = props.labelWidth,\n      notched = props.notched,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"labelWidth\", \"notched\", \"style\"]);\n\n  var theme = useTheme();\n  var align = theme.direction === 'rtl' ? 'right' : 'left';\n  var labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0;\n  return React.createElement(\"fieldset\", _extends({\n    \"aria-hidden\": true,\n    style: _extends(_defineProperty({}, \"padding\".concat(capitalize(align)), 8 + (notched ? 0 : labelWidth / 2)), style),\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.createElement(\"legend\", {\n    className: classes.legend,\n    style: {\n      // IE 11: fieldset with legend does not render\n      // a border radius. This maintains consistency\n      // by always having a legend rendered\n      width: notched ? labelWidth : 0.01\n    }\n  }, React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the label.\n   */\n  labelWidth: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateNotchedOutline'\n})(NotchedOutline);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport InputBase from '../InputBase';\nimport NotchedOutline from './NotchedOutline';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var borderColor = theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)';\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      '&:hover $notchedOutline': {\n        borderColor: theme.palette.text.primary\n      },\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        '&:hover $notchedOutline': {\n          borderColor: borderColor\n        }\n      },\n      '&$focused $notchedOutline': {\n        borderColor: theme.palette.primary.main,\n        borderWidth: 2\n      },\n      '&$error $notchedOutline': {\n        borderColor: theme.palette.error.main\n      },\n      '&$disabled $notchedOutline': {\n        borderColor: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {\n      paddingLeft: 14\n    },\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {\n      paddingRight: 14\n    },\n\n    /* Styles applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: '18.5px 14px',\n      '&$marginDense': {\n        paddingTop: 10.5,\n        paddingBottom: 10.5\n      }\n    },\n\n    /* Styles applied to the `NotchedOutline` element. */\n    notchedOutline: {\n      borderColor: borderColor\n    },\n\n    /* Styles applied to the `input` element. */\n    input: {\n      padding: '18.5px 14px'\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 10.5,\n      paddingBottom: 10.5\n    },\n\n    /* Styles applied to the `input` element if `select={true}`. */\n    inputSelect: {\n      paddingRight: 24\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {\n      paddingLeft: 0\n    },\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {\n      paddingRight: 0\n    }\n  };\n};\nvar OutlinedInput = React.forwardRef(function OutlinedInput(props, ref) {\n  var classes = props.classes,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$inputComponent = props.inputComponent,\n      inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,\n      _props$labelWidth = props.labelWidth,\n      labelWidth = _props$labelWidth === void 0 ? 0 : _props$labelWidth,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      notched = props.notched,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'text' : _props$type,\n      other = _objectWithoutProperties(props, [\"classes\", \"fullWidth\", \"inputComponent\", \"labelWidth\", \"multiline\", \"notched\", \"type\"]);\n\n  return React.createElement(InputBase, _extends({\n    renderSuffix: function renderSuffix(state) {\n      return React.createElement(NotchedOutline, {\n        className: classes.notchedOutline,\n        labelWidth: labelWidth,\n        notched: typeof notched !== 'undefined' ? notched : Boolean(state.startAdornment || state.filled || state.focused)\n      });\n    },\n    classes: _extends({}, classes, {\n      root: clsx(classes.root, classes.underline),\n      notchedOutline: null\n    }),\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? OutlinedInput.propTypes = {\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the wrapper element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the native input.\n   * Either a string to use a DOM element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The width of the label.\n   */\n  labelWidth: PropTypes.number,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nOutlinedInput.muiName = 'Input';\nexport default withStyles(styles, {\n  name: 'MuiOutlinedInput'\n})(OutlinedInput);"],"sourceRoot":""}